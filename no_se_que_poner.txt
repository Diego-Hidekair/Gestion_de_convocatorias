El error 404 (Not Found) indica que la ruta POST /pdf/combinar-y-guardar/99 no existe en tu backend. Esto ocurre porque no has definido la ruta correspondiente en tu archivo de rutas (pdfRoutes.js). Vamos a solucionar este problema paso a paso.

1. Verificar la Ruta en el Backend
Primero, aseg√∫rate de que la ruta POST /pdf/combinar-y-guardar/:id_convocatoria est√© definida en tu archivo de rutas (pdfRoutes.js).

pdfRoutes.js
javascript
Copy




2. Verificar el Controlador pdfController.js
Aseg√∫rate de que la funci√≥n combinarYGuardarPDFs est√© correctamente implementada en tu controlador.

pdfController.js
javascript
Copy
const { Pool } = require('pg');
const { PDFDocument } = require('pdf-lib');
const pool = new Pool({
    user: process.env.DB_USER,
    host: process.env.DB_HOST,
    database: process.env.DB_NAME,
    password: process.env.DB_PASSWORD,
    port: process.env.DB_PORT,
});

// Funci√≥n para combinar PDFs
const combinarPDFs = async (pdfBuffers) => {
    const mergedPdf = await PDFDocument.create();
    for (const pdfBuffer of pdfBuffers) {
        const pdf = await PDFDocument.load(pdfBuffer);
        const copiedPages = await mergedPdf.copyPages(pdf, pdf.getPageIndices());
        copiedPages.forEach((page) => mergedPdf.addPage(page));
    }
    return await mergedPdf.save();
};

// Combinar y guardar documentos adicionales
exports.combinarYGuardarPDFs = async (req, res) => {
    const { id_convocatoria } = req.params;
    const archivos = req.files.archivos; // Archivos subidos

    try {
        // Obtener el documento inicial de la tabla documentos
        const documentoInicial = await pool.query(
            `SELECT documento_path FROM documentos WHERE id_convocatoria = $1`,
            [id_convocatoria]
        );

        if (documentoInicial.rows.length === 0) {
            return res.status(404).json({ error: "Documento inicial no encontrado." });
        }

        const pdfInicial = documentoInicial.rows[0].documento_path;

        // Convertir los archivos subidos a buffers
        const buffersAdicionales = await Promise.all(
            archivos.map(async (archivo) => {
                return archivo.buffer;
            })
        );

        // Combinar PDFs
        const archivosParaCombinar = [pdfInicial, ...buffersAdicionales];
        const pdfCombinado = await combinarPDFs(archivosParaCombinar);

        // Guardar el PDF combinado en la tabla documentos
        await pool.query(
            `UPDATE documentos SET documento_path = $1, fecha_generacion = CURRENT_TIMESTAMP WHERE id_convocatoria = $2`,
            [pdfCombinado, id_convocatoria]
        );

        res.status(201).json({ message: "PDFs combinados y almacenados correctamente." });
    } catch (error) {
        console.error('Error al combinar y guardar PDFs:', error);
        res.status(500).json({ error: "Error al combinar y guardar los PDFs." });
    }
};
3. Configurar el Middleware de Subida de Archivos
Aseg√∫rate de que el middleware multer est√© configurado correctamente para manejar la subida de archivos.

middlewares/upload.js
javascript
Copy
const multer = require('multer');
const storage = multer.memoryStorage(); // Almacena los archivos en memoria como buffers
const upload = multer({ storage: storage });

module.exports = upload;
Modificar pdfRoutes.js para Usar el Middleware
javascript
Copy
const express = require('express');
const router = express.Router();
const pdfController = require('../controllers/pdfController');
const { authenticateToken, verificarRolSecretaria } = require('../middleware/authMiddleware');
const upload = require('../middlewares/upload');

// Ruta para generar el PDF inicial
router.get('/generar/:id_convocatoria/:id_honorario', authenticateToken, verificarRolSecretaria, pdfController.generatePDF);

// Ruta para combinar y guardar documentos adicionales
router.post('/combinar-y-guardar/:id_convocatoria', authenticateToken, verificarRolSecretaria, upload.array('archivos'), pdfController.combinarYGuardarPDFs);

// Ruta para ver el PDF combinado
router.get('/combinado/ver/:id_convocatoria', authenticateToken, pdfController.viewCombinedPDF);

// Ruta para descargar el PDF combinado
router.get('/descargar/:id_convocatoria', pdfController.downloadCombinedPDF);

// Ruta para eliminar el PDF
router.delete('/eliminar/:id_convocatoria', authenticateToken, verificarRolSecretaria, pdfController.deletePDF);

module.exports = router;
4. Verificar el Frontend
Aseg√∫rate de que el frontend est√© enviando los archivos correctamente.

PDFGenerator.js
javascript
Copy
const handleSubirArchivos = async (e) => {
    e.preventDefault();
    const formData = new FormData();
    archivosAdicionales.forEach((archivo) => {
        formData.append('archivos', archivo); // Aseg√∫rate de que el nombre del campo sea 'archivos'
    });

    try {
        const response = await axios.post(
            `http://localhost:5000/pdf/combinar-y-guardar/${id_convocatoria}`,
            formData,
            {
                headers: {
                    Authorization: `Bearer ${token}`,
                    'Content-Type': 'multipart/form-data',
                },
            }
        );

        if (response.status === 201) {
            console.log('Documentos adicionales subidos y combinados correctamente.');
            await cargarPDF(); // Recargar el PDF combinado
        } else {
            setError('Error al subir documentos adicionales.');
        }
    } catch (error) {
        console.error('Error al subir documentos adicionales:', error.message);
        setError('Error al subir documentos adicionales. Verifica tu conexi√≥n o intenta m√°s tarde.');
    }
};
5. Resumen
Backend:

Define la ruta POST /pdf/combinar-y-guardar/:id_convocatoria en pdfRoutes.js.

Implementa la funci√≥n combinarYGuardarPDFs en pdfController.js.

Configura el middleware multer para manejar la subida de archivos.

Frontend:

Aseg√∫rate de que el formulario env√≠e los archivos con el nombre de campo archivos.

Con estos cambios, el error 404 (Not Found) deber√≠a resolverse. Si el problema persiste, verifica que el servidor est√© corriendo y que las rutas est√©n correctamente definidas. ¬°No dudes en preguntar si necesitas m√°s ayuda! üòä

